@INPROCEEDINGS{lee2018correctness,
  author={W. {Lee} and G. {Stelle} and P. {McCormick} and A. {Aiken}},
  booktitle={2018 IEEE/ACM 2nd International Workshop on Software Correctness for HPC Applications (Correctness)},
  title={Correctness of Dynamic Dependence Analysis for Implicitly Parallel Tasking Systems},
  year={2018},
  volume={},
  number={},
  pages={17-24},
  keywords={Task analysis;Heuristic algorithms;Schedules;Semantics;Analytical models;Runtime;Performance analysis;correctness;dependence-analysis;tasking-runtimes;implicit-parallelism;programming-model},
  doi={10.1109/Correctness.2018.00007},
  ISSN={},
  month={Nov},
}

@inproceedings{stelle2017openmpir,
  author = {Stelle, George and Moses, William S. and Olivier, Stephen L. and McCormick, Patrick},
  title = {{OpenMPIR:} Implementing OpenMP Tasks with Tapir},
  booktitle = {Proceedings of the Fourth Workshop on the LLVM Compiler Infrastructure in HPC},
  series = {LLVM-HPC'17},
  year = {2017},
  isbn = {978-1-4503-5565-0},
  location = {Denver, CO, USA},
  pages = {3:1--3:12},
  articleno = {3},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/3148173.3148186},
  doi = {10.1145/3148173.3148186},
  acmid = {3148186},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{evans2017scheduling,
 author = {Evans, Noah and Olivier, Stephen L. and Barrett, Richard and Stelle, George},
 title = {Scheduling Chapel Tasks with Qthreads on Manycore: A Tale of Two Schedulers},
 booktitle = {Proceedings of the 7th International Workshop on Runtime and Operating Systems for Supercomputers ROSS 2017},
 series = {ROSS '17},
 year = {2017},
 isbn = {978-1-4503-5086-0},
 location = {Washingon, DC, USA},
 pages = {4:1--4:8},
 articleno = {4},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/3095770.3095774},
 doi = {10.1145/3095770.3095774},
 acmid = {3095774},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Chapel, Qthreads, Task Queues, Work Stealing},
} 

@InProceedings{stelle2016cem,
author="Stelle, George
and Stefanovic, Darko
and Olivier, Stephen L.
and Forrest, Stephanie",
editor="Van Horn, David
and Hughes, John",
title="Cactus Environment Machine",
booktitle="Trends in Functional Programming",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="24--43",
abstract="Existing machines for lazy evaluation use a flat representation of environments, storing the terms associated with free variables in an array. Combined with a heap, this structure supports the shared intermediate results required by lazy evaluation. We propose and describe an alternative approach that uses a shared environment to minimize the overhead of delayed computations. We show how a shared environment can act as both an environment and a mechanism for sharing results. To formalize this approach, we introduce a calculus that makes the shared environment explicit, as well as a machine to implement the calculus, the Cactus Environment Machine. A simple compiler implements the machine and is used to run experiments for assessing performance. The results show reasonable performance and suggest that incorporating this approach into real-world compilers could yield performance benefits in some scenarios.",
isbn="978-3-030-14805-8"
}
